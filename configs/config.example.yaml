# AWS SLURM Burst Advisor Configuration
# Copy this file to ~/.aws-slurm-burst-advisor.yaml or /etc/aws-slurm-burst-advisor/config.yaml
#
# Phase 2: Enhanced with domain detection, MPI optimization, and sister project integration

# SLURM Configuration
slurm_bin_path: "/usr/bin"
log_level: "info"

# Configuration file paths
partitions_config_path: "/etc/slurm/partitions.json"  # AWS plugin partitions.json
local_costs_config_path: "/etc/aws-slurm-burst-advisor/local-costs.yaml"
slurm_config_path: "/etc/slurm/slurm.conf"

# AWS Configuration
aws:
  region: "us-east-1"
  profile: "default"  # Leave empty to use default credentials
  pricing_region: "us-east-1"  # Pricing API is only available in us-east-1
  pricing_cache_minutes: 15

# Decision weights (must sum to reasonable values)
decision_weights:
  cost_weight: 0.3        # How much to weigh cost (0-1)
  time_weight: 0.7        # How much to weigh time savings (0-1)
  risk_weight: 0.1        # Risk aversion factor (0-1)
  reliability_weight: 0.1 # Reliability considerations (0-1)
  sustainability_weight: 0.05 # Environmental considerations (0-1)
  time_value_per_hour: 50.0  # Dollar value of researcher time per hour

# Analysis parameters
analysis:
  queue_sampling_minutes: 5      # How often to sample queue state
  historical_data_days: 7        # Days of historical data to analyze
  aws_startup_time_minutes: 3    # Expected AWS instance startup time
  spot_interruption_risk: 0.05   # Expected spot interruption rate
  min_confidence_threshold: 0.6  # Minimum confidence for recommendations
  default_time_value_per_hour: 50.0

# Phase 2: Sister project integration settings
integration:
  aws_slurm_burst_enabled: true              # Enable aws-slurm-burst plugin integration
  execution_plan_output_dir: "/tmp/asba"     # Directory for temporary execution plans
  domain_detection_enabled: true             # Enable automatic domain detection
  mpi_optimization_enabled: true             # Enable MPI-specific optimizations
  performance_learning_enabled: true         # Learn from execution results

# Phase 2: Research domain configuration
research_domains:
  auto_detect: true                          # Automatically detect research domains
  default_domain: "unknown"                 # Fallback when detection fails
  confidence_threshold: 0.3                 # Minimum confidence for domain classification

  # Domain-specific overrides
  domain_overrides:
    climate_modeling:
      mpi_library_preference: "OpenMPI"
      network_optimization: "bandwidth"
      instance_family_preference: ["c5n", "m5n"]

    machine_learning:
      mpi_library_preference: "NCCL"
      network_optimization: "latency"
      instance_family_preference: ["p3dn", "p4d"]

    bioinformatics:
      mpi_library_preference: "OpenMPI"
      network_optimization: "minimal"
      instance_family_preference: ["c5", "r5"]

# Phase 2: Job history and learning settings
job_history:
  enabled: true                              # Track personal job history
  retention_days: 365                       # Keep history for 1 year
  database_path: "~/.asba/jobs.db"          # SQLite database location
  pattern_detection_min_jobs: 3             # Minimum jobs needed for pattern detection
  efficiency_learning_enabled: true         # Learn from resource efficiency patterns

# Local cluster cost model (global parameters)
local_costs:
  depreciation_years: 3      # Hardware depreciation schedule
  utilization_target: 0.85   # Expected cluster utilization
  overhead_multiplier: 1.6   # Staff, facilities, network overhead
  default_currency: "USD"

  # Per-partition cost models
  partitions:
    cpu:
      cost_per_cpu_hour: 0.05
      cost_per_node_hour: 0.10
      maintenance_factor: 1.3    # 30% overhead for maintenance
      power_cost_factor: 1.2     # 20% for power/cooling

    gpu:
      cost_per_cpu_hour: 0.08
      cost_per_node_hour: 0.25
      cost_per_gpu_hour: 2.50    # GPU hardware is expensive
      maintenance_factor: 1.4    # Higher maintenance for GPU nodes
      power_cost_factor: 1.5     # Higher power consumption

    memory:
      cost_per_cpu_hour: 0.06
      cost_per_node_hour: 0.15
      maintenance_factor: 1.2
      power_cost_factor: 1.1

    debug:
      cost_per_cpu_hour: 0.03    # Lower cost for debug partition
      cost_per_node_hour: 0.05
      maintenance_factor: 1.1
      power_cost_factor: 1.0